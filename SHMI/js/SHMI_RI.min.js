/*
	Modified: 2020-26-01

	Copyright (c) 2020 Thorsten Willert

	Permission is hereby granted, free of charge, to any person obtaining a copy of
	this software and associated documentation files (the "Software"), to deal in
	the Software without restriction, including without limitation the rights to use,
	copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
	Software, and to permit persons to whom the Software is furnished to do so,
	subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
	INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
	PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
	HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
	OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

// =========================================================================
// Local storage key: File name without suffix + ID of the element
var sStorage_Key = "SHMI__" + location.pathname.substring(location.pathname.lastIndexOf("/") + 1).replace(/\..+$/, '');
// =========================================================================
var updateInterval = 2000; // refresh rate of the instruments
// =========================================================================

$(function() {
	var storage_container = $("#ID_Storage");
	var used_container = $("#ID_Used");

	// =====================================================================
	function init() {
		var updatingChart;
		var values;
		var val;

		$("#ID_RI_image").attr('src', "./pict/" + location.pathname.substring(location.pathname.lastIndexOf("/") + 1).replace(/\..+$/, '') + ".svg");

		// add data points to select
		$.getJSON("./data/data.json", function(data) {
			$.each(data, function(id, val) {
				val = Round(val, 2)

				if (id.indexOf("DI") != -1) {
					$('#ID_option_DI').append($('<option>', {
						value: id,
						text: id
					}));
				} else if (id.indexOf("DO") != -1) {
					$('#ID_option_DO').append($('<option>', {
						value: id,
						text: id
					}));
				} else if (id.indexOf("AI") != -1) {
					$('#ID_option_AI').append($('<option>', {
						value: id,
						text: id
					}));
					$('#ID_option_AIS').append($('<option>', {
						value: id + "_S",
						text: id + " Sparkline"
					}));
				} else if (id.indexOf("AO") != -1) {
					$('#ID_option_AO').append($('<option>', {
						value: id,
						text: id
					}));
					$('#ID_option_AOS').append($('<option>', {
						value: id + "_S",
						text: id + " Sparkline"
					}));
				}
			});
		})
			.done(function() {

				$('.js-example-basic-multiple').select2();
				showInstruments();

			});
	}
	init();

	//======================================================================
	function savePosition(o) {

		var oSave = {
			'id': o.target.id,
			'type': 'RI',
			'left': Math.round($('#' + o.target.id).offset().left),
			'top': Math.round($('#' + o.target.id).offset().top),
			'height': o.target.clientHeight,
			'width': o.target.clientWidth,
			'rotate': 0
		};
		localStorage.setItem(sStorage_Key + "__" + o.target.id, JSON.stringify(oSave));
	};

	//======================================================================
	function showInstruments() {
		var aA = [];
		var aD = [];

		for (var i = 0; i < localStorage.length; i++) {

			oInst = JSON.parse(localStorage.getItem(localStorage.key(i)));

			if (oInst.type == "RI") {
				if ( $('#' + oInst.id).length == 0) {

					if ( oInst.id.indexOf("D") != -1) {
						aD.push( oInst.id.substr(3, 10 ) );
					}
					if ( oInst.id.indexOf("A") != -1) {
						aA.push( oInst.id.substr(3, 10 ) );
					};

					addInstrumentD(oInst.id.substr(3, 10));
					addInstrumentA(oInst.id.substr(3, 10));
				};
			};
		};
		$('#ID_Select_D').val( aD ).trigger('change');
		$('#ID_Select_A').val( aA ).trigger('change');
	};

	//======================================================================
	function loadPositions() {
		var oInst;

		for (var i = 0; i < localStorage.length; i++) {

			oInst = JSON.parse(localStorage.getItem(localStorage.key(i)));

			if (oInst.type == "RI") {
				$('#' + oInst.id).offset({
					top: oInst.top,
					left: oInst.left
				});
				$('#' + oInst.id).css('height', oInst.height);
				$('#' + oInst.id).css('width', oInst.width);
				$('#' + oInst.id).css('rotate', oInst.rotate);
			};
		};
	};

	//======================================================================
	function addDropEvents() {
		// save position after drop or resize
		$('.instrument').on('clayfy-drop clayfy-resizeend', function(e) {
			savePosition(e);
		});
	}

	//======================================================================
	// remove instruments
	$('#ID_Select_D').on('select2:unselect', function(e) {
		$('#ID_' + e.params.data.id).remove();
		localStorage.removeItem(sStorage_Key + "__ID_" + e.params.data.id);
	});
	$('#ID_Select_A').on('select2:unselect', function(e) {
		$('#ID_' + e.params.data.id).remove();
		localStorage.removeItem(sStorage_Key + "__ID_" + e.params.data.id);
	});

	//======================================================================
	// add instruments
	$('#ID_Select_D').on('select2:select', function(e) {
		addInstrumentD(e.params.data.id);
	});
	$('#ID_Select_A').on('select2:select', function(e) {
		addInstrumentA(e.params.data.id);
	});
	//======================================================================
	function addInstrumentA(id) {

		var sHTML_spark =
			'<div class="SHMI_drag SHMI_drag_%2 instrument" title="%1" id="ID_%1">' +
			'<span id="ID_%1_A">&nbsp</span><br>' +
			'<div style="padding: 2px;">' +
			'<span id="ID_%1_spark" class="peity-%3 chart-%3">0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0</span>' +
			'</div>' +
			'</div>'

		var sHTML_meter =
			'<div class="SHMI_drag SHMI_drag_%2 instrument" title="%1" id="ID_%1">' +
			'<span id="ID_%1_A">&nbsp</span><br>' +
			'<div id="ID_%2" class="progress" style="padding: 2px;">' +
			'<div id="ID_%1_M" class="progress-bar bg-success" role="progressbar"></div>' +
			'</div>'

		if (id.indexOf('AI') != -1 && id.indexOf('_S') != -1) {
			$("#IDpict").prepend(
				sHTML_spark.replace(/%1/g, id).replace(/%2/g, "AI").replace(/%3/g, "ai")
			);
		} else if (id.indexOf('AO') != -1 && id.indexOf('_S') != -1) {
			$("#IDpict").prepend(
				sHTML_spark.replace(/%1/g, id).replace(/%2/g, "AO").replace(/%3/g, "ao")
			);
		} else if (id.indexOf('AI') != -1) {
			$("#IDpict").prepend(
				sHTML_meter.replace(/%1/g, id).replace(/%2/g, "AI")
			);
		} else if (id.indexOf('AO') != -1) {
			$("#IDpict").prepend(
				sHTML_meter.replace(/%1/g, id).replace(/%2/g, "AO")
			);
		}

		$('.instrument').clayfy({
			type: 'resizable',
			container: '#IDpict',
			droppable: '#IDpict',
			minSize: [70, 50],
			maxSize: [300, 50],
			top: false,
			bottom: false
		});
		// sparklines
		$(".peity-ai").peity("line", {
			fill: ["var(--sparkline_ai_fill)"],
			stroke: "var(--sparkline_ai_stroke)",
			min: 0,
			max: 100,
			width: "100%"
		});
		$(".peity-ao").peity("line", {
			fill: ["var(--sparkline_ao_fill)"],
			stroke: "var(--sparkline_ao_stroke)",
			min: 0,
			max: 100,
			width: "100%"
		});

		addDropEvents();
		loadPositions();
	};
	//======================================================================
	function addInstrumentD(id) {

		var sHTML = '<div class="SHMI_drag SHMI_drag_D%2 instrument" title="%1" id="ID_%1">%1' +
			'<br><span id="ID_%1_D"><i class="fas fa-circle">&nbsp</i></span></div>';

		if (id.indexOf('DI') != -1) {
			$("#IDpict").prepend(
				sHTML.replace(/%1/g, id).replace(/%2/g, 'I')
			);
		} else if (id.indexOf('DO') != -1) {
			$("#IDpict").prepend(
				sHTML.replace(/%1/g, id).replace(/%2/g, 'O')
			);
		}

		$('.instrument').clayfy({
			type: 'resizable',
			container: '#IDpict',
			minSize: [50, 50],
			maxSize: [300, 50],
			top: false,
			bottom: false
		});

		addDropEvents();
		loadPositions();
	};

	//======================================================================
	function updateValues() {
		var val, id;
		var updatingChart;
		var values;

		parent.top.$("#IDdata").find("input").each(function() {
			val = this.value;
			id = this.id;

			// digital
			$("#ID_" + id + "_D").css("opacity", val);

			// analog ------------------------------------------------------
			$("#ID_" + id + "_A").text(Round(val, 2) + "%");
			$("#ID_" + id + "_S_A").text(Round(val, 2) + "%");
			$("#ID_" + id + "_M").css("width", val + "%");

			// sparklines
			updatingChart = $("#ID_" + id + "_S_spark").peity("line")
			values = updatingChart.text().split(",")
			values.shift()
			values.push(Round(val, 0))

			updatingChart
				.text(values.join(","))
				.change()

		});

		setTimeout(updateValues, updateInterval);
	};
	$(function() { updateValues(); });
});
