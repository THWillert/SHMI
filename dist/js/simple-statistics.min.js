!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self).ss={})}(this,(function(t){"use strict";function e(t){if(0===t.length)return 0;let e,n=t[0],r=0;for(let o=1;o<t.length;o++)e=n+t[o],Math.abs(n)>=Math.abs(t[o])?r+=n-e+t[o]:r+=t[o]-e+n,n=e;return n+r}function n(t){if(0===t.length)throw new Error("mean requires at least one data point");return e(t)/t.length}function r(t,e){const r=n(t);let o,i,a=0;if(2===e)for(i=0;i<t.length;i++)a+=(o=t[i]-r)*o;else for(i=0;i<t.length;i++)a+=Math.pow(t[i]-r,e);return a}function o(t){if(0===t.length)throw new Error("variance requires at least one data point");return r(t,2)/t.length}function i(t){if(1===t.length)return 0;const e=o(t);return Math.sqrt(e)}function a(t){if(0===t.length)throw new Error("mode requires at least one data point");if(1===t.length)return t[0];let e=t[0],n=NaN,r=0,o=1;for(let i=1;i<t.length+1;i++)t[i]!==e?(o>r&&(r=o,n=e),o=1,e=t[i]):o++;return n}function l(t){return t.slice().sort((function(t,e){return t-e}))}function s(t){if(0===t.length)throw new Error("min requires at least one data point");let e=t[0];for(let n=1;n<t.length;n++)t[n]<e&&(e=t[n]);return e}function u(t){if(0===t.length)throw new Error("max requires at least one data point");let e=t[0];for(let n=1;n<t.length;n++)t[n]>e&&(e=t[n]);return e}function h(t,e){const n=t.length*e;if(0===t.length)throw new Error("quantile requires at least one data point.");if(e<0||e>1)throw new Error("quantiles must be between 0 and 1");return 1===e?t[t.length-1]:0===e?t[0]:n%1!=0?t[Math.ceil(n)-1]:t.length%2==0?(t[n-1]+t[n])/2:t[n]}function f(t,e,n,r){for(n=n||0,r=r||t.length-1;r>n;){if(r-n>600){const o=r-n+1,i=e-n+1,a=Math.log(o),l=.5*Math.exp(2*a/3);let s=.5*Math.sqrt(a*l*(o-l)/o);i-o/2<0&&(s*=-1),f(t,e,Math.max(n,Math.floor(e-i*l/o+s)),Math.min(r,Math.floor(e+(o-i)*l/o+s)))}const o=t[e];let i=n,a=r;for(c(t,n,e),t[r]>o&&c(t,n,r);i<a;){for(c(t,i,a),i++,a--;t[i]<o;)i++;for(;t[a]>o;)a--}t[n]===o?c(t,n,a):c(t,++a,r),a<=e&&(n=a+1),e<=a&&(r=a-1)}}function c(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function g(t,e){const n=t.slice();if(Array.isArray(e)){!function(t,e){const n=[0];for(let r=0;r<e.length;r++)n.push(M(t.length,e[r]));n.push(t.length-1),n.sort(w);const r=[0,n.length-1];for(;r.length;){const e=Math.ceil(r.pop()),o=Math.floor(r.pop());if(e-o<=1)continue;const i=Math.floor((o+e)/2);p(t,n[i],Math.floor(n[o]),Math.ceil(n[e])),r.push(o,i,i,e)}}(n,e);const t=[];for(let r=0;r<e.length;r++)t[r]=h(n,e[r]);return t}return p(n,M(n.length,e),0,n.length-1),h(n,e)}function p(t,e,n,r){e%1==0?f(t,e,n,r):(f(t,e=Math.floor(e),n,r),f(t,e+1,e+1,r))}function w(t,e){return t-e}function M(t,e){const n=t*e;return 1===e?t-1:0===e?0:n%1!=0?Math.ceil(n)-1:t%2==0?n-.5:n}function m(t,e){if(e<t[0])return 0;if(e>t[t.length-1])return 1;let n=function(t,e){let n=0,r=0,o=t.length;for(;r<o;)e<=t[n=r+o>>>1]?o=n:r=-~n;return r}(t,e);if(t[n]!==e)return n/t.length;n++;const r=function(t,e){let n=0,r=0,o=t.length;for(;r<o;)e>=t[n=r+o>>>1]?r=-~n:o=n;return r}(t,e);if(r===n)return n/t.length;const o=r-n+1;return o*(r+n)/2/o/t.length}function d(t){const e=g(t,.75),n=g(t,.25);if("number"==typeof e&&"number"==typeof n)return e-n}function b(t){return+g(t,.5)}function q(t){const e=b(t),n=[];for(let r=0;r<t.length;r++)n.push(Math.abs(t[r]-e));return b(n)}function E(t,e){e=e||Math.random;let n,r,o=t.length;for(;o>0;)r=Math.floor(e()*o--),n=t[o],t[o]=t[r],t[r]=n;return t}function v(t,e){return E(t.slice().slice(),e)}function y(t){let e,n=0;for(let r=0;r<t.length;r++)0!==r&&t[r]===e||(e=t[r],n++);return n}function S(t,e){const n=[];for(let r=0;r<t;r++){const t=[];for(let n=0;n<e;n++)t.push(0);n.push(t)}return n}function x(t,e,n,r){let o;if(t>0){const i=(n[e]-n[t-1])/(e-t+1);o=r[e]-r[t-1]-(e-t+1)*i*i}else o=r[e]-n[e]*n[e]/(e+1);return o<0?0:o}function P(t,e,n,r,o,i,a){if(t>e)return;const l=Math.floor((t+e)/2);r[n][l]=r[n-1][l-1],o[n][l]=l;let s=n;t>n&&(s=Math.max(s,o[n][t-1]||0)),s=Math.max(s,o[n-1][l]||0);let u,h,f,c,g=l-1;e<r.length-1&&(g=Math.min(g,o[n][e+1]||0));for(let t=g;t>=s&&!((u=x(t,l,i,a))+r[n-1][s-1]>=r[n][l]);--t)(f=(h=x(s,l,i,a))+r[n-1][s-1])<r[n][l]&&(r[n][l]=f,o[n][l]=s),s++,(c=u+r[n-1][t-1])<r[n][l]&&(r[n][l]=c,o[n][l]=t);P(t,l-1,n,r,o,i,a),P(l+1,e,n,r,o,i,a)}function k(t,e){if(t.length!==e.length)throw new Error("sampleCovariance requires samples with equal lengths");if(t.length<2)throw new Error("sampleCovariance requires at least two data points in each sample");const r=n(t),o=n(e);let i=0;for(let n=0;n<t.length;n++)i+=(t[n]-r)*(e[n]-o);return i/(t.length-1)}function I(t){if(t.length<2)throw new Error("sampleVariance requires at least two data points");return r(t,2)/(t.length-1)}function D(t){const e=I(t);return Math.sqrt(e)}function C(t,e,n,r){return(t*e+n*r)/(e+r)}function T(t){if(0===t.length)throw new Error("rootMeanSquare requires at least one data point");let e=0;for(let n=0;n<t.length;n++)e+=Math.pow(t[n],2);return Math.sqrt(e/t.length)}class N{constructor(){this.totalCount=0,this.data={}}train(t,e){this.data[e]||(this.data[e]={});for(const n in t){const r=t[n];void 0===this.data[e][n]&&(this.data[e][n]={}),void 0===this.data[e][n][r]&&(this.data[e][n][r]=0),this.data[e][n][r]++}this.totalCount++}score(t){const e={};let n;for(const r in t){const o=t[r];for(n in this.data)e[n]={},this.data[n][r]?e[n][r+"_"+o]=(this.data[n][r][o]||0)/this.totalCount:e[n][r+"_"+o]=0}const r={};for(n in e){r[n]=0;for(const t in e[n])r[n]+=e[n][t]}return r}}class _{constructor(){this.weights=[],this.bias=0}predict(t){if(t.length!==this.weights.length)return null;let e=0;for(let n=0;n<this.weights.length;n++)e+=this.weights[n]*t[n];return(e+=this.bias)>0?1:0}train(t,e){if(0!==e&&1!==e)return null;t.length!==this.weights.length&&(this.weights=t,this.bias=1);const n=this.predict(t);if("number"==typeof n&&n!==e){const r=e-n;for(let e=0;e<this.weights.length;e++)this.weights[e]+=r*t[e];this.bias+=r}return this}}const R=1e-4;function F(t){if(t<0)throw new Error("factorial requires a non-negative value");if(Math.floor(t)!==t)throw new Error("factorial requires an integer input");let e=1;for(let n=2;n<=t;n++)e*=n;return e}const A=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3399464998481189e-20,4652362892704858e-20,-9837447530487956e-20,.0001580887032249125,-.00021026444172410488,.00021743961811521265,-.0001643181065367639,8441822398385275e-20,-26190838401581408e-21,36899182659531625e-22],z=607/128,V=Math.log(Math.sqrt(2*Math.PI));const j={1:{.995:0,.99:0,.975:0,.95:0,.9:.02,.5:.45,.1:2.71,.05:3.84,.025:5.02,.01:6.63,.005:7.88},2:{.995:.01,.99:.02,.975:.05,.95:.1,.9:.21,.5:1.39,.1:4.61,.05:5.99,.025:7.38,.01:9.21,.005:10.6},3:{.995:.07,.99:.11,.975:.22,.95:.35,.9:.58,.5:2.37,.1:6.25,.05:7.81,.025:9.35,.01:11.34,.005:12.84},4:{.995:.21,.99:.3,.975:.48,.95:.71,.9:1.06,.5:3.36,.1:7.78,.05:9.49,.025:11.14,.01:13.28,.005:14.86},5:{.995:.41,.99:.55,.975:.83,.95:1.15,.9:1.61,.5:4.35,.1:9.24,.05:11.07,.025:12.83,.01:15.09,.005:16.75},6:{.995:.68,.99:.87,.975:1.24,.95:1.64,.9:2.2,.5:5.35,.1:10.65,.05:12.59,.025:14.45,.01:16.81,.005:18.55},7:{.995:.99,.99:1.25,.975:1.69,.95:2.17,.9:2.83,.5:6.35,.1:12.02,.05:14.07,.025:16.01,.01:18.48,.005:20.28},8:{.995:1.34,.99:1.65,.975:2.18,.95:2.73,.9:3.49,.5:7.34,.1:13.36,.05:15.51,.025:17.53,.01:20.09,.005:21.96},9:{.995:1.73,.99:2.09,.975:2.7,.95:3.33,.9:4.17,.5:8.34,.1:14.68,.05:16.92,.025:19.02,.01:21.67,.005:23.59},10:{.995:2.16,.99:2.56,.975:3.25,.95:3.94,.9:4.87,.5:9.34,.1:15.99,.05:18.31,.025:20.48,.01:23.21,.005:25.19},11:{.995:2.6,.99:3.05,.975:3.82,.95:4.57,.9:5.58,.5:10.34,.1:17.28,.05:19.68,.025:21.92,.01:24.72,.005:26.76},12:{.995:3.07,.99:3.57,.975:4.4,.95:5.23,.9:6.3,.5:11.34,.1:18.55,.05:21.03,.025:23.34,.01:26.22,.005:28.3},13:{.995:3.57,.99:4.11,.975:5.01,.95:5.89,.9:7.04,.5:12.34,.1:19.81,.05:22.36,.025:24.74,.01:27.69,.005:29.82},14:{.995:4.07,.99:4.66,.975:5.63,.95:6.57,.9:7.79,.5:13.34,.1:21.06,.05:23.68,.025:26.12,.01:29.14,.005:31.32},15:{.995:4.6,.99:5.23,.975:6.27,.95:7.26,.9:8.55,.5:14.34,.1:22.31,.05:25,.025:27.49,.01:30.58,.005:32.8},16:{.995:5.14,.99:5.81,.975:6.91,.95:7.96,.9:9.31,.5:15.34,.1:23.54,.05:26.3,.025:28.85,.01:32,.005:34.27},17:{.995:5.7,.99:6.41,.975:7.56,.95:8.67,.9:10.09,.5:16.34,.1:24.77,.05:27.59,.025:30.19,.01:33.41,.005:35.72},18:{.995:6.26,.99:7.01,.975:8.23,.95:9.39,.9:10.87,.5:17.34,.1:25.99,.05:28.87,.025:31.53,.01:34.81,.005:37.16},19:{.995:6.84,.99:7.63,.975:8.91,.95:10.12,.9:11.65,.5:18.34,.1:27.2,.05:30.14,.025:32.85,.01:36.19,.005:38.58},20:{.995:7.43,.99:8.26,.975:9.59,.95:10.85,.9:12.44,.5:19.34,.1:28.41,.05:31.41,.025:34.17,.01:37.57,.005:40},21:{.995:8.03,.99:8.9,.975:10.28,.95:11.59,.9:13.24,.5:20.34,.1:29.62,.05:32.67,.025:35.48,.01:38.93,.005:41.4},22:{.995:8.64,.99:9.54,.975:10.98,.95:12.34,.9:14.04,.5:21.34,.1:30.81,.05:33.92,.025:36.78,.01:40.29,.005:42.8},23:{.995:9.26,.99:10.2,.975:11.69,.95:13.09,.9:14.85,.5:22.34,.1:32.01,.05:35.17,.025:38.08,.01:41.64,.005:44.18},24:{.995:9.89,.99:10.86,.975:12.4,.95:13.85,.9:15.66,.5:23.34,.1:33.2,.05:36.42,.025:39.36,.01:42.98,.005:45.56},25:{.995:10.52,.99:11.52,.975:13.12,.95:14.61,.9:16.47,.5:24.34,.1:34.28,.05:37.65,.025:40.65,.01:44.31,.005:46.93},26:{.995:11.16,.99:12.2,.975:13.84,.95:15.38,.9:17.29,.5:25.34,.1:35.56,.05:38.89,.025:41.92,.01:45.64,.005:48.29},27:{.995:11.81,.99:12.88,.975:14.57,.95:16.15,.9:18.11,.5:26.34,.1:36.74,.05:40.11,.025:43.19,.01:46.96,.005:49.65},28:{.995:12.46,.99:13.57,.975:15.31,.95:16.93,.9:18.94,.5:27.34,.1:37.92,.05:41.34,.025:44.46,.01:48.28,.005:50.99},29:{.995:13.12,.99:14.26,.975:16.05,.95:17.71,.9:19.77,.5:28.34,.1:39.09,.05:42.56,.025:45.72,.01:49.59,.005:52.34},30:{.995:13.79,.99:14.95,.975:16.79,.95:18.49,.9:20.6,.5:29.34,.1:40.26,.05:43.77,.025:46.98,.01:50.89,.005:53.67},40:{.995:20.71,.99:22.16,.975:24.43,.95:26.51,.9:29.05,.5:39.34,.1:51.81,.05:55.76,.025:59.34,.01:63.69,.005:66.77},50:{.995:27.99,.99:29.71,.975:32.36,.95:34.76,.9:37.69,.5:49.33,.1:63.17,.05:67.5,.025:71.42,.01:76.15,.005:79.49},60:{.995:35.53,.99:37.48,.975:40.48,.95:43.19,.9:46.46,.5:59.33,.1:74.4,.05:79.08,.025:83.3,.01:88.38,.005:91.95},70:{.995:43.28,.99:45.44,.975:48.76,.95:51.74,.9:55.33,.5:69.33,.1:85.53,.05:90.53,.025:95.02,.01:100.42,.005:104.22},80:{.995:51.17,.99:53.54,.975:57.15,.95:60.39,.9:64.28,.5:79.33,.1:96.58,.05:101.88,.025:106.63,.01:112.33,.005:116.32},90:{.995:59.2,.99:61.75,.975:65.65,.95:69.13,.9:73.29,.5:89.33,.1:107.57,.05:113.14,.025:118.14,.01:124.12,.005:128.3},100:{.995:67.33,.99:70.06,.975:74.22,.95:77.93,.9:82.36,.5:99.33,.1:118.5,.05:124.34,.025:129.56,.01:135.81,.005:140.17}};const B=Math.sqrt(2*Math.PI),K={gaussian:function(t){return Math.exp(-.5*t*t)/B}},O={nrd:function(t){let e=D(t);const n=d(t);return"number"==typeof n&&(e=Math.min(e,n/1.34)),1.06*e*Math.pow(t.length,-.2)}};function U(t,e,n){let r,o;if(void 0===e)r=K.gaussian;else if("string"==typeof e){if(!K[e])throw new Error('Unknown kernel "'+e+'"');r=K[e]}else r=e;if(void 0===n)o=O.nrd(t);else if("string"==typeof n){if(!O[n])throw new Error('Unknown bandwidth method "'+n+'"');o=O[n](t)}else o=n;return function(e){let n=0,i=0;for(n=0;n<t.length;n++)i+=r((e-t[n])/o);return i/o/t.length}}const G=Math.sqrt(2*Math.PI);function H(t){let e=t,n=t;for(let r=1;r<15;r++)e+=n*=t*t/(2*r+1);return Math.round(1e4*(.5+e/G*Math.exp(-t*t/2)))/1e4}const L=[];for(let t=0;t<=3.09;t+=.01)L.push(H(t));function W(t){const e=1/(1+.5*Math.abs(t)),n=e*Math.exp(-t*t+((((((((.17087277*e-.82215223)*e+1.48851587)*e-1.13520398)*e+.27886807)*e-.18628806)*e+.09678418)*e+.37409196)*e+1.00002368)*e-1.26551223);return t>=0?1-n:n-1}function J(t){const e=8*(Math.PI-3)/(3*Math.PI*(4-Math.PI)),n=Math.sqrt(Math.sqrt(Math.pow(2/(Math.PI*e)+Math.log(1-t*t)/2,2)-Math.log(1-t*t)/e)-(2/(Math.PI*e)+Math.log(1-t*t)/2));return t>=0?n:-n}function Q(t){if("number"==typeof t)return t<0?-1:0===t?0:1;throw new TypeError("not a number")}t.BayesianClassifier=N,t.PerceptronModel=_,t.addToMean=function(t,e,n){return t+(n-t)/(e+1)},t.average=n,t.bayesian=N,t.bernoulliDistribution=function(t){if(t<0||t>1)throw new Error("bernoulliDistribution requires probability to be between 0 and 1 inclusive");return[1-t,t]},t.binomialDistribution=function(t,e){if(e<0||e>1||t<=0||t%1!=0)return;let n=0,r=0;const o=[];let i=1;do{o[n]=i*Math.pow(e,n)*Math.pow(1-e,t-n),r+=o[n],i=i*(t-++n+1)/n}while(r<1-R);return o},t.bisect=function(t,e,n,r,o){if("function"!=typeof t)throw new TypeError("func must be a function");for(let i=0;i<r;i++){const r=(e+n)/2;if(0===t(r)||Math.abs((n-e)/2)<o)return r;Q(t(r))===Q(t(e))?e=r:n=r}throw new Error("maximum number of iterations exceeded")},t.chiSquaredDistributionTable=j,t.chiSquaredGoodnessOfFit=function(t,e,r){let o=0;const i=e(n(t)),a=[],l=[];for(let e=0;e<t.length;e++)void 0===a[t[e]]&&(a[t[e]]=0),a[t[e]]++;for(let t=0;t<a.length;t++)void 0===a[t]&&(a[t]=0);for(const e in i)e in a&&(l[+e]=i[e]*t.length);for(let t=l.length-1;t>=0;t--)l[t]<3&&(l[t-1]+=l[t],l.pop(),a[t-1]+=a[t],a.pop());for(let t=0;t<a.length;t++)o+=Math.pow(a[t]-l[t],2)/l[t];const s=a.length-1-1;return j[s][r]<o},t.chunk=function(t,e){const n=[];if(e<1)throw new Error("chunk size must be a positive number");if(Math.floor(e)!==e)throw new Error("chunk size must be an integer");for(let r=0;r<t.length;r+=e)n.push(t.slice(r,r+e));return n},t.ckmeans=function(t,e){if(e>t.length)throw new Error("cannot generate more classes than there are data values");const n=l(t);if(1===y(n))return[n];const r=S(e,n.length),o=S(e,n.length);!function(t,e,n){const r=e[0].length,o=t[Math.floor(r/2)],i=[],a=[];for(let l,s=0;s<r;++s)l=t[s]-o,0===s?(i.push(l),a.push(l*l)):(i.push(i[s-1]+l),a.push(a[s-1]+l*l)),e[0][s]=x(0,s,i,a),n[0][s]=0;let l;for(let t=1;t<e.length;++t)P(l=t<e.length-1?t:r-1,r-1,t,e,n,i,a)}(n,r,o);const i=[];let a=o[0].length-1;for(let t=o.length-1;t>=0;t--){const e=o[t][a];i[t]=n.slice(e,a+1),t>0&&(a=e-1)}return i},t.combinations=function t(e,n){let r,o;const i=[];let a,l;for(r=0;r<e.length;r++)if(1===n)i.push([e[r]]);else for(a=t(e.slice(r+1,e.length),n-1),o=0;o<a.length;o++)(l=a[o]).unshift(e[r]),i.push(l);return i},t.combinationsReplacement=function t(e,n){const r=[];for(let o=0;o<e.length;o++)if(1===n)r.push([e[o]]);else{const i=t(e.slice(o,e.length),n-1);for(let t=0;t<i.length;t++)r.push([e[o]].concat(i[t]))}return r},t.combineMeans=C,t.combineVariances=function(t,e,n,r,o,i){const a=C(e,n,o,i);return(n*(t+Math.pow(e-a,2))+i*(r+Math.pow(o-a,2)))/(n+i)},t.cumulativeStdNormalProbability=function(t){const e=Math.abs(t),n=Math.min(Math.round(100*e),L.length-1);return t>=0?L[n]:+(1-L[n]).toFixed(4)},t.epsilon=R,t.equalIntervalBreaks=function(t,e){if(t.length<2)return t;const n=s(t),r=u(t),o=[n],i=(r-n)/e;for(let t=1;t<e;t++)o.push(o[0]+i*t);return o.push(r),o},t.erf=W,t.errorFunction=W,t.extent=function(t){if(0===t.length)throw new Error("extent requires at least one data point");let e=t[0],n=t[0];for(let r=1;r<t.length;r++)t[r]>n&&(n=t[r]),t[r]<e&&(e=t[r]);return[e,n]},t.extentSorted=function(t){return[t[0],t[t.length-1]]},t.factorial=F,t.gamma=function t(e){if(Number.isInteger(e))return e<=0?NaN:F(e-1);if(--e<0)return Math.PI/(Math.sin(Math.PI*-e)*t(-e));{const t=e+.25;return Math.pow(e/Math.E,e)*Math.sqrt(2*Math.PI*(e+1/6))*(1+1/144/Math.pow(t,2)-1/12960/Math.pow(t,3)-257/207360/Math.pow(t,4)-52/2612736/Math.pow(t,5)+5741173/9405849600/Math.pow(t,6)+37529/18811699200/Math.pow(t,7))}},t.gammaln=function(t){if(t<=0)return 1/0;t--;let e=A[0];for(let n=1;n<15;n++)e+=A[n]/(t+n);const n=z+.5+t;return V+Math.log(e)-n+(t+.5)*Math.log(n)},t.geometricMean=function(t){if(0===t.length)throw new Error("geometricMean requires at least one data point");let e=1;for(let n=0;n<t.length;n++){if(t[n]<=0)throw new Error("geometricMean requires only positive numbers as input");e*=t[n]}return Math.pow(e,1/t.length)},t.harmonicMean=function(t){if(0===t.length)throw new Error("harmonicMean requires at least one data point");let e=0;for(let n=0;n<t.length;n++){if(t[n]<=0)throw new Error("harmonicMean requires only positive numbers as input");e+=1/t[n]}return t.length/e},t.interquartileRange=d,t.inverseErrorFunction=J,t.iqr=d,t.kde=U,t.kernelDensityEstimation=U,t.linearRegression=function(t){let e,n;const r=t.length;if(1===r)e=0,n=t[0][1];else{let o,i,a,l=0,s=0,u=0,h=0;for(let e=0;e<r;e++)i=(o=t[e])[0],a=o[1],l+=i,s+=a,u+=i*i,h+=i*a;n=s/r-(e=(r*h-l*s)/(r*u-l*l))*l/r}return{m:e,b:n}},t.linearRegressionLine=function(t){return function(e){return t.b+t.m*e}},t.mad=q,t.max=u,t.maxSorted=function(t){return t[t.length-1]},t.mean=n,t.median=b,t.medianAbsoluteDeviation=q,t.medianSorted=function(t){return h(t,.5)},t.min=s,t.minSorted=function(t){return t[0]},t.mode=function(t){return a(l(t))},t.modeFast=function(t){const e=new Map;let n,r=0;for(let o=0;o<t.length;o++){let i=e.get(t[o]);void 0===i?i=1:i++,i>r&&(n=t[o],r=i),e.set(t[o],i)}if(0===r)throw new Error("mode requires at last one data point");return n},t.modeSorted=a,t.numericSort=l,t.perceptron=_,t.permutationTest=function(t,e,r,o){if(void 0===o&&(o=1e4),void 0===r&&(r="two_side"),"two_side"!==r&&"greater"!==r&&"less"!==r)throw new Error("`alternative` must be either 'two_side', 'greater', or 'less'");const i=n(t)-n(e),a=new Array(o),l=t.concat(e),s=Math.floor(l.length/2);for(let t=0;t<o;t++){E(l);const e=l.slice(0,s),r=l.slice(s,l.length),o=n(e)-n(r);a[t]=o}let u=0;if("two_side"===r)for(let t=0;t<=o;t++)Math.abs(a[t])>=Math.abs(i)&&(u+=1);else if("greater"===r)for(let t=0;t<=o;t++)a[t]>=i&&(u+=1);else for(let t=0;t<=o;t++)a[t]<=i&&(u+=1);return u/o},t.permutationsHeap=function(t){const e=new Array(t.length),n=[t.slice()];for(let n=0;n<t.length;n++)e[n]=0;for(let r=0;r<t.length;)if(e[r]<r){let o=0;r%2!=0&&(o=e[r]);const i=t[o];t[o]=t[r],t[r]=i,n.push(t.slice()),e[r]++,r=0}else e[r]=0,r++;return n},t.poissonDistribution=function(t){if(t<=0)return;let e=0,n=0;const r=[];let o=1;do{r[e]=Math.exp(-t)*Math.pow(t,e)/o,n+=r[e],o*=++e}while(n<1-R);return r},t.probit=function(t){return 0===t?t=R:t>=1&&(t=1-R),Math.sqrt(2)*J(2*t-1)},t.product=function(t){let e=1;for(let n=0;n<t.length;n++)e*=t[n];return e},t.quantile=g,t.quantileRank=function(t,e){return m(l(t),e)},t.quantileRankSorted=m,t.quantileSorted=h,t.quickselect=f,t.rSquared=function(t,e){if(t.length<2)return 1;let n=0;for(let e=0;e<t.length;e++)n+=t[e][1];const r=n/t.length;let o=0;for(let e=0;e<t.length;e++)o+=Math.pow(r-t[e][1],2);let i=0;for(let n=0;n<t.length;n++)i+=Math.pow(t[n][1]-e(t[n][0]),2);return 1-i/o},t.rms=T,t.rootMeanSquare=T,t.sample=function(t,e,n){return v(t,n).slice(0,e)},t.sampleCorrelation=function(t,e){return k(t,e)/D(t)/D(e)},t.sampleCovariance=k,t.sampleKurtosis=function(t){const e=t.length;if(e<4)throw new Error("sampleKurtosis requires at least four data points");const r=n(t);let o,i=0,a=0;for(let n=0;n<e;n++)i+=(o=t[n]-r)*o,a+=o*o*o*o;return(e-1)/((e-2)*(e-3))*(e*(e+1)*a/(i*i)-3*(e-1))},t.sampleSkewness=function(t){if(t.length<3)throw new Error("sampleSkewness requires at least three data points");const e=n(t);let r,o=0,i=0;for(let n=0;n<t.length;n++)o+=(r=t[n]-e)*r,i+=r*r*r;const a=t.length-1,l=Math.sqrt(o/a),s=t.length;return s*i/((s-1)*(s-2)*Math.pow(l,3))},t.sampleStandardDeviation=D,t.sampleVariance=I,t.sampleWithReplacement=function(t,e,n){if(0===t.length)return[];n=n||Math.random;const r=t.length,o=[];for(let i=0;i<e;i++){const e=Math.floor(n()*r);o.push(t[e])}return o},t.shuffle=v,t.shuffleInPlace=E,t.sign=Q,t.standardDeviation=i,t.standardNormalTable=L,t.subtractFromMean=function(t,e,n){return(t*e-n)/(e-1)},t.sum=e,t.sumNthPowerDeviations=r,t.sumSimple=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e},t.tTest=function(t,e){return(n(t)-e)/(i(t)/Math.sqrt(t.length))},t.tTestTwoSample=function(t,e,r){const o=t.length,i=e.length;if(!o||!i)return null;r||(r=0);const a=n(t),l=n(e),s=I(t),u=I(e);if("number"==typeof a&&"number"==typeof l&&"number"==typeof s&&"number"==typeof u){const t=((o-1)*s+(i-1)*u)/(o+i-2);return(a-l-r)/Math.sqrt(t*(1/o+1/i))}},t.uniqueCountSorted=y,t.variance=o,t.zScore=function(t,e,n){return(t-e)/n},Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=simple-statistics.min.js.map
